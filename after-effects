#!/bin/bash
# Legal Preamble:
#
# This script is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; version 3.
#
# This script is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, see <https://www.gnu.org/licenses/gpl-3.0.txt>



function _init_script_variables()
{
  #defining directory
  dir=$(cd -P -- "$(dirname -- "$0")" && pwd -P)
  #PACKAGES_REQ="$dir/data/PACKAGES_REQ.list"

  #DEFINE LOGGING FUNCTIONS
  #Define LOG FILE
  readonly SCRIPT=Inchara
  readonly SCRIPT_LOG="$dir"/data/setup_script.log
  error_flag=false
  insync_abort=false
  try_generic_name=false
  touch "$SCRIPT_LOG"

  #set flags
  insync_abort=false

  DEBUG "Following details were recognised by the Script"
  #grabbing os info
  readonly OS_DISTRIBUTION=$(lsb_release --id | cut -f2 | tr '[:upper:]' '[:lower:]') || insync_abort=true && try_generic_name=true
  readonly VERSION=$(lsb_release --release | cut -f2)
  readonly LONG_VERSION=$(lsb_release -d | cut -f2 | cut -d ' ' -f2)
  readonly CODE_NAME=$(lsb_release --codename | cut -f2)|| insync_abort=true && try_generic_name=true
  readonly ARCH=$(uname -m | sed 's/x86_//;s/i[3-6]86/32/')
  readonly SOURCES_FILE_DIR=/etc/apt/sources.list.d

  #colors for display
  readonly COLOR_BLUE=$(tput setaf 6)
  readonly YELLOW=$(tput setaf 3)
  readonly RESET_COLOR=$(tput sgr 0)
  readonly COLOR_MAGNATA=$(tput setaf 5)


  DEBUG "IMPORTED FILES"
  readonly DEB_FILES_LIST="$dir"/data/lists/lists/deb_files.list
  readonly GSETTINGS="$dir"/data/lists/gsettings.list
  readonly PPA_LIST="$dir"/data/lists/ppa.list
  readonly PPA_LIST_EXTRA="$dir"/data/lists/ppa_extra.list
  readonly KEYS_LIST="$dir"/data/lists/keys.list
  readonly KEYS_SERVER_LIST="$dir"/data/lists/keyservers.list
  readonly DEV="$dir"/data/lists/delelopment.list
  readonly UTIL="$dir"/data/lists/utilities.list
  readonly LATEX="$dir"/data/lists/latex.list
  readonly MULTIMEDIA="$dir"/data/lists/multimedia.list


}

function SCRIPTENTRY()
{
    DEBUG "Executing Script"
    script_name=$(basename "$0")
    printf "\n${FUNCNAME}: $script_name" >> "$SCRIPT_LOG"
}

function SCRIPTEXIT()
{
    DEBUG "Exiting Script"
    script_name=$(basename "$0")
    printf "\n${FUNCNAME}: $script_name" >> "$SCRIPT_LOG"
}


function DEBUG()
{
    local msg="$1"
    #local timestamp=$(date)
    printf "\n[$(date)] [DEBUG]\t$msg" >> "$SCRIPT_LOG"
}

function LOG_AND_PRINT()
{
  local msg="$1"
  #local timestamp=$(date)
  printf "\n[$(date)] [DEBUG]\t$msg" >> "$SCRIPT_LOG"
  printf "\n${msg}"
}

function _init_script_initialization()
{
if ${insync_abort}; then
  DEBUG "INSYNC WONT INSTALL: Either OS Detection or release code name detection failed"
fi

DEBUG "OS:${OS_DISTRIBUTION}"
DEBUG "VERSION:${VERSION}"
DEBUG "CODE_NAME:${CODE_NAME}"
DEBUG "ARCHITECHTURE:${ARCH}"
DEBUG "PATH FOR SOURCE FILES:${SOURCES_FILE_DIR}"

#----- Import Functions -----#

. "$dir"/functions/addppa
. "$dir"/functions/addrepository
. "$dir"/functions/all_in_one
. "$dir"/functions/catalyst
. "$dir"/functions/checkconnection
. "$dir"/functions/goodbyemsg
. "$dir"/functions/install_latex
. "$dir"/functions/installapps1
. "$dir"/functions/installdebs
. "$dir"/functions/looks
. "$dir"/functions/reset_repo
. "$dir"/functions/update
. "$dir"/functions/utils


#----------------------------#

#disable hist chars  so that I can print "!!"" properly
histchars=
# Main loop
}

function _process_opts {
    eval $(resize)
    MAIN=$(whiptail \
        --notags \
        --title "$SCRIPT" \
        --menu "\nWhat would you like me to do?" \
        --cancel-button "Quit" \
        $LINES $COLUMNS $(( LINES - 12 )) \
        update_repos        'Perform system update' \
        all_in_one          'Install all apps and configure, I am in control' \
        install_catalyst    'Install Catalyst(only for 14.04.01 or below)' \
        add_repositories    'Add Common Repositories' \
        add_ppa_modular     'Add PPAs from file' \
        install_apps       'Install most common tools' \
        install_latex       'Install LateX' \
        install_debs_modular 'Install DEBS not available in Repositories' \
        make_it_look_nice   'Takes care of some themes and gsettings configurations'\
        rest_repo           'Reset Repositories for cleanup or another test run'\
        3>&1 1>&2 2>&3)

    exitstatus=$?
    if [ $exitstatus = 0 ]; then
        $MAIN
    else
        quit
    fi
}

# Quit
function quit {
    if (whiptail --title "Quit" --yesno "Are you sure you want quit?" 10 60) then
        echo "Exiting..."
        goodbye_msg;
        SCRIPTEXIT;
        exit 99;
    else
        _process_opts;
    fi
}

function main()
{
  _init_script_variables;
  _init_script_initialization;
  while :
  do
    _process_opts;
  done

}

main "$@"
SCRIPTEXIT
